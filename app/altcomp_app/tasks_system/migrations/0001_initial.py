# Generated by Django 3.2.6 on 2022-01-13 18:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0013_alter_config_data'),
        ('devices', '0011_accessory'),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('device_name', models.CharField(max_length=250)),
                ('fault_description', models.TextField()),
                ('repair_description', models.TextField()),
                ('estimated_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('deadline', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('close', 'Close')], default='open', max_length=5)),
                ('send_notification', models.CharField(choices=[('sms', 'SMS'), ('email', 'E-mail'), ('no', "Don't notify")], default='no', max_length=5)),
                ('priority', models.IntegerField(choices=[(4, 'Low'), (3, 'Normal'), (2, 'Important'), (1, 'Critical')], default=3)),
                ('accessories', models.ManyToManyField(related_name='tasks', to='devices.Accessory')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='customers.customer')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='properties.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks_system.task')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
